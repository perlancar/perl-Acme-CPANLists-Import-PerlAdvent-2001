<html>

<!-- page copyright Mark Fowler 2002-2004 -->
<!-- all rights reserved -->

<head>
 <title>Perl 2001 Advent Calendar: POE</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body bgcolor="#ff7f00">


<div class="bigheading">The 2001 Perl Advent Calendar</div>
<div class="externalnav"><a href="../../FAQ-2shortplanks.html">[about]</a> | <a href="../../archives.html">[archives]</a> | <a href="../../contact.html">[contact]</a> | <a href="../../">[home]</a></div>
<br />


<div class="box">
<div class="onthe">
On the 11th day of Advent my True Language brought to me..
</div>
<div class="modtitle">POE</div>

<!-- ooh look, a table.  Someone *please* tell me how to do this with css -->
<!-- also, i.e. totally doesn't dtr if I say width="100%" here -->
<center>
<table width="300"  cellpadding="0" cellspacing="0">
<tr>

<td width="33%">

<div align="left" class="internalnav"><a href="../10th/">[previous]</a></div>
</td>


<td width="33%">
<div align="center" class="internalnav">
<a href="../">[calendar]</a>
</div>
</td>

<td width="33%">

<div align="right" class="internalnav"><a href="../12th/">[next]</a></div>

</td>

</tr>
</table>
</center>

</div>




<div class="box">
<div class="doc"><p>Talking about <b>POE</b> as a module is weird - to me it's a whole other way
of thinking.</p>
<p><b>POE</b> is essentially an event queue system where you can set up handlers
that deal with things by defining "states" that the routine should
enter if certain things happen. Basically the idea is that you do very
very little in each state and try to get back to the main loop as soon
as possible. This is essentially co-operative multi-threading - each
time something happens you deal with it a little and hand back control
to the main loop that then decides what to do next.</p>
<p>This is all very different from a normal perl program. No longer do
you control where the flow of control goes...if you want to call
something else you really should express a desire to the POE kernel
that in the not too distant future that state be entered. This is
obviously more complicated but comes with the advantage that POE is
able to interleave your tasks with other pressing tasks (for example,
competing 'threads' or updating the display) and you don't have to
worry about it.</p>
<p>Of course, there are other event loop type systems out there that you
can use. Both Tk and Gtk have event loops of their own and use their
own handler system that similarly is triggered whenever a UI event
occurs. What I really like about POE is that it plays nicely with
these systems and cooperates with them, meaning that you can use the
Gtk or Tk loops just like they were POE loops and everything works
just as you would expect it to.</p>
<p>POE is not a simple module, and it does come with a whole large
collection of mnemonics, cultural shifts, odd paradigms and
conventions that you must get your head around before you can get to
grips with it - but when you do you'll never look back.</p>
</div>
<div class="mylink"><a href="http://search.cpan.org/perldoc?POE">[Read the documentation for POE on search.cpan.org]</a></div>
</div>



<div class="box">
<div class="doc"></div>
</div>




<div class="box">
<div class="doc"><p><li><a href="http://poe.perl.org/">The POE homepage</a></li></p>
</div>
</div>




 




<!-- Created 2004-12-21T18:29:51 -->

<br/>

<div class="copyright">
Copyright 2000-2004 Mark Fowler, all rights reserved.<br/>
This documentation may be distributed under the <a href="http://www.opensource.org/licenses/academic.php">Academic Free License</a><br/>
Comments/Complaints/Suggestions re this site: <a href="../../contact.html">webmaster</a>
</div>

</body>
</html>