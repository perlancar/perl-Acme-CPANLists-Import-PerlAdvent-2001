<html>

<!-- page copyright Mark Fowler 2002-2004 -->
<!-- all rights reserved -->

<head>
 <title>Perl 2001 Advent Calendar: Quantum::Superpositions</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body bgcolor="#ff7f00">


<div class="bigheading">The 2001 Perl Advent Calendar</div>
<div class="externalnav"><a href="../../FAQ-2shortplanks.html">[about]</a> | <a href="../../archives.html">[archives]</a> | <a href="../../contact.html">[contact]</a> | <a href="../../">[home]</a></div>
<br />


<div class="box">
<div class="onthe">
On the 24th day of Advent my True Language brought to me..
</div>
<div class="modtitle">Quantum::Superpositions</div>

<!-- ooh look, a table.  Someone *please* tell me how to do this with css -->
<!-- also, i.e. totally doesn't dtr if I say width="100%" here -->
<center>
<table width="300"  cellpadding="0" cellspacing="0">
<tr>

<td width="33%">

<div align="left" class="internalnav"><a href="../23rd/">[previous]</a></div>
</td>


<td width="33%">
<div align="center" class="internalnav">
<a href="../">[calendar]</a>
</div>
</td>

<td width="33%">

<div align="right" class="internalnav"><a href="../25th/">[next]</a></div>

</td>

</tr>
</table>
</center>

</div>




<div class="box">
<div class="doc"><p>If you've never seen Damian give his talk on <b>Quantum::Superpostions</b>
then I can highly recommend it if he is able to give one in your
area. Damian came to London and gave all of London.pm a quick talk on
all of this. It involved many Mars bars. It was very funny.</p>
<p>The module itself supposes a form of quantum computer was available
and creates an interface that can be used to do complex calculations
in constant times by combining the superpositions of states. Imagine
having a scalar that represents every element of a list
simultaneously. And checking if an element in the list only takes
constant time - it's no longer related to the length of the
list. Spooky</p>
<p>Of course quantum computers aren't an everyday occurrence yet (no
matter what <li><a href="http://www.theregister.co.uk/content/3/23478.html">IBM are up to</a></li>) and perl hasn't been ported to them just
yet. So perl cheats and does everything in non linear time. And
searching though lists takes a long time again :-(. But should the
quantum machine become common in the workplace perl will be there
ahead of the game....</p>
<p>Until then, we're left with a module that is actually capable of doing
some rather nice set calculations in a reasonably unambiguous
way. It's also really easy to map predicate logic onto Q::S scalars,
so it might even prove to be useful in that manner - but don't tell
anyone I told you so</p>
</div>
<div class="mylink"><a href="http://search.cpan.org/perldoc?Quantum::Superpositions">[Read the documentation for Quantum::Superpositions on search.cpan.org]</a></div>
</div>



<div class="box">
<div class="doc"></div>
</div>




<div class="box">
<div class="doc"><p><li><a href="http://search.cpan.org/author/AJGOUGH/Quantum-Entanglement/Entanglement.pm">Quantum::Entanglement</a></li>
<li><a href="http://www.theregister.co.uk/content/3/23478.html">IBM's attempts at Quantum Computers</a></li></p>
</div>
</div>




 




<!-- Created 2004-12-21T18:29:51 -->

<br/>

<div class="copyright">
Copyright 2000-2004 Mark Fowler, all rights reserved.<br/>
This documentation may be distributed under the <a href="http://www.opensource.org/licenses/academic.php">Academic Free License</a><br/>
Comments/Complaints/Suggestions re this site: <a href="../../contact.html">webmaster</a>
</div>

</body>
</html>