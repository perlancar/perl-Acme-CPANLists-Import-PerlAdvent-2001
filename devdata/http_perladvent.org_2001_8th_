<html>

<!-- page copyright Mark Fowler 2002-2004 -->
<!-- all rights reserved -->

<head>
 <title>Perl 2001 Advent Calendar: List::Util</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body bgcolor="#ff7f00">


<div class="bigheading">The 2001 Perl Advent Calendar</div>
<div class="externalnav"><a href="../../FAQ-2shortplanks.html">[about]</a> | <a href="../../archives.html">[archives]</a> | <a href="../../contact.html">[contact]</a> | <a href="../../">[home]</a></div>
<br />


<div class="box">
<div class="onthe">
On the 8th day of Advent my True Language brought to me..
</div>
<div class="modtitle">List::Util</div>

<!-- ooh look, a table.  Someone *please* tell me how to do this with css -->
<!-- also, i.e. totally doesn't dtr if I say width="100%" here -->
<center>
<table width="300"  cellpadding="0" cellspacing="0">
<tr>

<td width="33%">

<div align="left" class="internalnav"><a href="../7th/">[previous]</a></div>
</td>


<td width="33%">
<div align="center" class="internalnav">
<a href="../">[calendar]</a>
</div>
</td>

<td width="33%">

<div align="right" class="internalnav"><a href="../9th/">[next]</a></div>

</td>

</tr>
</table>
</center>

</div>




<div class="box">
<div class="doc"><p>Just as a <b>Scalar::Util</b> is useful for dealing with Scalars, <b>List::Util</b>
allows you to do a whole bunch of useful things with lists.  Of course,
all the things in this module are possible to implement fairly easily
without the module, but by using the module we we instantly get clarity
of code, and much less chance of introducing subtle bugs.</p>
<p><b>List::Util</b> comes with a set of standard useful things, you can shuffle
lists, add the lists up, find the largest or smallest value.</p>
<p>More fun, and harder to write succinctly without the module are the
first and reduce operators. first is <i>really</i> a godsend - it
simply returns the first element of the list the condition is true
for.  This is actually quite hard to write in normal code in a way
that it's clear what you're doing (normally you have to use a while
loop and remember the index you were at) whereas <b>List::Util</b> lets you
write it in a functional style.</p>
<p>The reduce method gives us a structure for running over the list
keeping some sort of running value, and can be used to form a basis
for any of the other operations.  In conjunction with grep and map
this operation can be used to do incredibly complex list operations
in mere lines rather than pages of code.</p>
</div>
<div class="mylink"><a href="http://search.cpan.org/perldoc?List::Util">[Read the documentation for List::Util on search.cpan.org]</a></div>
</div>



<div class="box">
<div class="doc"></div>
</div>




<div class="box">
<div class="doc"></div>
</div>




 




<!-- Created 2004-12-21T18:29:50 -->

<br/>

<div class="copyright">
Copyright 2000-2004 Mark Fowler, all rights reserved.<br/>
This documentation may be distributed under the <a href="http://www.opensource.org/licenses/academic.php">Academic Free License</a><br/>
Comments/Complaints/Suggestions re this site: <a href="../../contact.html">webmaster</a>
</div>

</body>
</html>