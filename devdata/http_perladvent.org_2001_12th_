<html>

<!-- page copyright Mark Fowler 2002-2004 -->
<!-- all rights reserved -->

<head>
 <title>Perl 2001 Advent Calendar: POE::Component::Client::HTTP</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body bgcolor="#ff7f00">


<div class="bigheading">The 2001 Perl Advent Calendar</div>
<div class="externalnav"><a href="../../FAQ-2shortplanks.html">[about]</a> | <a href="../../archives.html">[archives]</a> | <a href="../../contact.html">[contact]</a> | <a href="../../">[home]</a></div>
<br />


<div class="box">
<div class="onthe">
On the 12th day of Advent my True Language brought to me..
</div>
<div class="modtitle">POE::Component::Client::HTTP</div>

<!-- ooh look, a table.  Someone *please* tell me how to do this with css -->
<!-- also, i.e. totally doesn't dtr if I say width="100%" here -->
<center>
<table width="300"  cellpadding="0" cellspacing="0">
<tr>

<td width="33%">

<div align="left" class="internalnav"><a href="../11th/">[previous]</a></div>
</td>


<td width="33%">
<div align="center" class="internalnav">
<a href="../">[calendar]</a>
</div>
</td>

<td width="33%">

<div align="right" class="internalnav"><a href="../13th/">[next]</a></div>

</td>

</tr>
</table>
</center>

</div>




<div class="box">
<div class="doc"><p>Yesterday I talked about how <b>POE</b> was a great module because it
allowed you to do multiple things at once in a voluntary manner. One
particular module that I've used with to great effect is
PoCo::Client::HTTP.</p>
<p>With traditional LWP you pass a UserAgent a Request for a webpage, and
after a while a Response gets handed back to you. This is all very
simple and straight forward. One of the things that I do with such
scripts is provide RSS access to various HTML web resources. These are
useful in numerous ways - not in the least that infobot is able to
render XML feeds directly to IRC.</p>
<p>The problem with this method however is that each HTTP request is
handled sequentially meaning that the script laboriously gets one page
after another - a real pain if you've got slow servers. In my example
where the infobot is making a HTTP request to my server it can
actually time out before the last page is back and the RSS stream can
be generated. With PoCo::Client::HTTP it's possible to get more than
one page at once. Suddenly my script that waited for to total time it
takes to get all pages only has to run for the time it takes for the
longest page to return! A vast improvement.</p>
<p>Of course, there are other more complicated things you can do with
this module than this - For example I've used it to perform a DDoS
from all the spare machines in the office onto our test web
cluster. Importantly it shows a good example of concurrent programming
with POE that you can play around with and immediately useful and
clear improvements out of the simplest script.</p>
</div>
<div class="mylink"><a href="http://search.cpan.org/perldoc?POE::Component::Client::HTTP">[Read the documentation for POE::Component::Client::HTTP on search.cpan.org]</a></div>
</div>



<div class="box">
<div class="doc"></div>
</div>




<div class="box">
<div class="doc"><p><li><a href="http://search.cpan.org/author/RCAPUTO/POE/POE.pm">POE</a></li>
<li><a href="http://poe.perl.org/">The POE homepage</a></li>
<li><a href="http://search.cpan.org/author/GAAS/libwww-perl/lib/LWP.pm">LWP</a></li></p>
</div>
</div>




 




<!-- Created 2004-12-21T18:29:51 -->

<br/>

<div class="copyright">
Copyright 2000-2004 Mark Fowler, all rights reserved.<br/>
This documentation may be distributed under the <a href="http://www.opensource.org/licenses/academic.php">Academic Free License</a><br/>
Comments/Complaints/Suggestions re this site: <a href="../../contact.html">webmaster</a>
</div>

</body>
</html>