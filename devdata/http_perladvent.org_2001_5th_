<html>

<!-- page copyright Mark Fowler 2002-2004 -->
<!-- all rights reserved -->

<head>
 <title>Perl 2001 Advent Calendar: XML::XPath</title>
<link rel="stylesheet" href="../style.css" type="text/css" /></head>
<body bgcolor="#ff7f00">


<div class="bigheading">The 2001 Perl Advent Calendar</div>
<div class="externalnav"><a href="../../FAQ-2shortplanks.html">[about]</a> | <a href="../../archives.html">[archives]</a> | <a href="../../contact.html">[contact]</a> | <a href="../../">[home]</a></div>
<br />


<div class="box">
<div class="onthe">
On the 5th day of Advent my True Language brought to me..
</div>
<div class="modtitle">XML::XPath</div>

<!-- ooh look, a table.  Someone *please* tell me how to do this with css -->
<!-- also, i.e. totally doesn't dtr if I say width="100%" here -->
<center>
<table width="300"  cellpadding="0" cellspacing="0">
<tr>

<td width="33%">

<div align="left" class="internalnav"><a href="../4th/">[previous]</a></div>
</td>


<td width="33%">
<div align="center" class="internalnav">
<a href="../">[calendar]</a>
</div>
</td>

<td width="33%">

<div align="right" class="internalnav"><a href="../6th/">[next]</a></div>

</td>

</tr>
</table>
</center>

</div>




<div class="box">
<div class="doc"><p>What can I say about XML::XPath?  As far as I'm concerned it is <i>the</i>
most useful module for processing XML in my current arsenal.  XPath is often
described as "regular expressions for XML," which is a good, if not slightly
inaccurate place to start.</p>
<p>XML::XPath allows you to drill down from the root node, or relative
to any other node you may have access to depending on some fuzzy rules
that you have defined.  It's just like any other declarative language
where you simply state what you want and let the engine churn away
with it's own matching strategy, backtracking till you get what you
want.  Of course, you get to ignore how the computer does all of this;
Like all my favourite modules this one <i>just works</i>.</p>
<p>One of the great things about using XPath in Perl is that fact that
you're not forced into using the declarative syntax if you don't want
to.  At any point Matt has programmed it so you can call any of the
object orientated methods on the the node objects directly to move
around the tree that way - or indeed mix and match the two picking
whichever is best suited to the job.  This is Perl, and yet again
There's More Than One Way To Do It.</p>
</div>
<div class="mylink"><a href="http://search.cpan.org/perldoc?XML::XPath">[Read the documentation for XML::XPath on search.cpan.org]</a></div>
</div>



<div class="box">
<div class="doc"></div>
</div>




<div class="box">
<div class="doc"><p><li><a href="http://search.cpan.org/author/MSERGEANT/XML-XPath/XPath/Node.pm">XML::XPath::Node for descriptions of the nodes</a></li>
<li><a href="http://search.cpan.org/author/ABW/Template-Toolkit/lib/Template/Plugin/XML/XPath.pm">Template::Plugin::XML::XPath for the Template Toolkit Plugin</a></li>
<li><a href="http://search.cpan.org/author/WHYTEWOLF/XML-XPath-Simple/Simple.pm">XML::XPath::Simple for the simple interface</a></li>
<li><a href="http://search.cpan.org/author/PHISH/XML-LibXML/LibXML.pm">XML::LibXML for a similar C library</a></li></p>
</div>
</div>




 




<!-- Created 2004-12-21T18:29:50 -->

<br/>

<div class="copyright">
Copyright 2000-2004 Mark Fowler, all rights reserved.<br/>
This documentation may be distributed under the <a href="http://www.opensource.org/licenses/academic.php">Academic Free License</a><br/>
Comments/Complaints/Suggestions re this site: <a href="../../contact.html">webmaster</a>
</div>

</body>
</html>